using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Particle_Generator_Tutorial
{
    class ParticleGenerator
    {
        Texture2D texture;

        float spawnWidth;
        float density;

        List<Rain> rain = new List<Rain>();

        float timer;

        Random rand1, rand2;

        public ParticleGenerator(Texture2D newTexture, float newSpawnWidth, float newDensity)
        {
            texture = newTexture;
            spawnWidth = newSpawnWidth;
            density = newDensity;
            rand1 = new Random();
            rand2 = new Random();
        }

        public void createParticle()
        {
            double anything = rand1.Next();
            rain.Add(new Rain(texture, new Vector2(-100 + (float)rand1.NextDouble() * spawnWidth, 0), new Vector2(2, rand2.Next(5, 9))));
        }

        public void Update(GameTime gameTime, GraphicsDevice graphics)
        {
            timer += (float)gameTime.ElapsedGameTime.TotalSeconds;

            while(timer > 0)
            {
                timer -= 0.5f / density;
                createParticle();
            }

            for (int i = 0; i < rain.Count; i++)
            {
                rain[i].Update();

                if(rain[i].Position.Y > graphics.Viewport.Height)
                {
                    rain.RemoveAt(i);
                    i--;
                }
            }
        }

        public void Draw(SpriteBatch spriteBatch)
        {
            foreach (Rain raindrop in rain)
                raindrop.Draw(spriteBatch);

        }


    }
}
